@page "/"

@using System.Reflection.Metadata
@using CommissionPage.wwwroot
@inject DarkModeService DarkModeService
@inject IJSRuntime JSRuntime

<PageTitle>OwO</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large">

    <MudPaper id="paper1" Class="pa-15 ma-10 d-flex" Elevation="23" flex-wrap-reverse gap-4 Style="overflow: hidden">

        <MudStack Class="pa-3 d-flex">
            <MudText Typo="Typo.h2" Color="Color.Primary">
                Avatar Commissions
            </MudText>

            <MudText Typo="Typo.body1">
                Hi, I'm Marcel, I have been playing vrchat since 2020 and been creating avatars since then. I since then worked on various ideas that came to mind and done some commssions for friends. Anyway if you are interested in a custom avatar and you like the style of my work contact me preferably on discord or any of the other platforms mentioned below.
            </MudText>

            <MudText Typo="Typo.h5" Color="Color.Primary">Contact:</MudText>

            <MudText Typo="Typo.body1">Discord: marcelsigl</MudText>
            <MudStack Row="true">
                <MudButton Href="https://github.com/MarcelOwO" Class="scale-up" Variant="Variant.Outlined" StartIcon="@Icons.Custom.Brands.GitHub" Color="Color.Primary"> Github</MudButton>
                <MudButton Href="https://t.me/MarcelUwU" Class="scale-up" Variant="Variant.Outlined" StartIcon="@Icons.Custom.Brands.Telegram" Color="Color.Primary">Telegram</MudButton>
                <MudButton Href="https://x.com/Marcel_Sigl" Class="scale-up" Variant="Variant.Outlined" StartIcon="@Icons.Custom.Brands.Twitter" Color="Color.Primary">X</MudButton>
            </MudStack>
        </MudStack>

        <MudButton Style="width: 750px;height: 250px" OnClick="OpenOverlay" Class="rounded-lg ma-auto">
            <MudImage Src="@SonaLink" ObjectFit="ObjectFit.Cover" Width="250"/>
        </MudButton>
        <MudOverlay @bind-Visible="_visible" DarkBackground AutoClose="true">
            <MudImage Src="@SonaLink" Class="rounded-lg ma-auto" ObjectFit="ObjectFit.Cover"/>
        </MudOverlay>
    </MudPaper>
    <MudPaper id="paper3" Class="pa-15 ma-10" Elevation="23">

        <MudText Class="ma-4" Typo="Typo.h3" Color="Color.Primary">
            Examples of my work
        </MudText>

        <MudGrid Justify="Justify.Center">
            <MudItem xs-3 Class="d-flex  justify-center">
                <MudCarousel Class="rounded-lg" Style="height:380px;width:320px" ShowArrows="true" ShowBullets="false" EnableSwipeGesture="true" AutoCycle="true" ItemsSource="@_imageList1">
                    <ItemTemplate>
                        <MudButton ObjectPosition="ObjectPosition.Center" Style="height: 100%;width: 100%;object-fit: contain" OnClick="() => OpenImageOverlay(context)">
                            <MudImage Style="width: 110%;height: 110%" ObjectFit="ObjectFit.Contain" Src="@context"/>
                        </MudButton>
                    </ItemTemplate>
                </MudCarousel>
            </MudItem>

            <MudItem xs-3 Class="d-flex  justify-center">
                <MudCarousel Class="rounded-lg" Style="height:380px;width:320px" ShowArrows="true" ShowBullets="false" EnableSwipeGesture="true" AutoCycle="true" ItemsSource="@_imageList2">
                    <ItemTemplate>
                        <MudButton ObjectPosition="ObjectPosition.Center" Style="height: 100%;width: 100%;object-fit: contain" OnClick="() => OpenImageOverlay(context)">
                            <MudImage Style="width: 110%;height: 110%" ObjectFit="ObjectFit.Contain" Src="@context"/>
                        </MudButton>
                    </ItemTemplate>
                </MudCarousel>
            </MudItem>
            <MudItem xs-3 Class="d-flex  justify-center">
                <MudCarousel Class="rounded-lg" Style="height:380px;width:320px" ShowArrows="true" ShowBullets="false" EnableSwipeGesture="true" AutoCycle="true" ItemsSource="@_imageList3">
                    <ItemTemplate>
                        <MudButton ObjectPosition="ObjectPosition.Center" Style="height: 100%;width: 100%;object-fit: contain" OnClick="() => OpenImageOverlay(context)">
                            <MudImage Style="width: 110%;height: 110%" ObjectFit="ObjectFit.Contain" Src="@context"/>
                        </MudButton>
                    </ItemTemplate>
                </MudCarousel>
            </MudItem>
        </MudGrid>
    </MudPaper>
    <MudPaper id="paper2" Class="pa-15 ma-10" Elevation="23">
        <MudText Class="ma-4" Typo="Typo.h3" Color="Color.Primary">
            Expertise and Skills
        </MudText>

        <MudText Typo="Typo.h5" Color="Color.Primary">
            Avatar Creation:
        </MudText>
        <MudText Typo="Typo.body1">
            I have already created models for platforms like VRChat, CVR and other platforms. But I'm mostly experienced with VRChat avatars.
        </MudText>

        <MudText Typo="Typo.h5" Color="Color.Primary">
            3D Modeling:
        </MudText>
        <MudText Typo="Typo.body1">
            I'm experienced in Blender and have used a bit of ZBrush in the past and am mostly used to creating kitbashes of models but I can also create some simpler custom models. However, my experience with complex and models and sculpting is limited.
        </MudText>

        <MudText Typo="Typo.h5" Color="Color.Primary">Texturing:</MudText>
        <MudText Typo="Typo.body1">
            Probably the application I'm most experienced with, though I'm not that great with coming up with own designs.
        </MudText>

        <MudText Typo="Typo.h5" Color="Color.Primary">Shaders:</MudText>
        <MudText Typo="Typo.body1">
            I have worked on some simple shaders in the past like simple fire shaders that are applied on the uv of the mesh written in hlsl and i have some experience with amplify.
        </MudText>

        <MudText Typo="Typo.h5" Color="Color.Primary">Systems for Avatars:</MudText>
        <MudText Typo="Typo.body1">
            I can add various systems to your avatars like vrchat-facetracking, world-constraints or other systems that you can come up with.
            If you want I could also make some kind of osc application.
        </MudText>
    </MudPaper>


    <MudPaper id="paper4" Class="pa-15 ma-10" Elevation="23">
        <MudText Class="ma-4" Typo="Typo.h3" Color="Color.Primary">
            Prices
        </MudText>

        <MudText Typo="Typo.body1">
            Prices start around 100 Euro for a simple complete avatar setup for vrchat with a very simple texture. For any other assets or feature it would depend on the complexity and the required time it would require me.
        </MudText>
    </MudPaper>

    <MudPaper id="paper5" Class="pa-15 ma-10" Elevation="23">
        <MudText Class="ma-4" Typo="Typo.h3" Color="Color.Primary">
            Commission Process
        </MudText>

        <MudText Typo="Typo.h5" Color="Color.Primary">
            Contact:
        </MudText>
        <MudText>
            Just message me on discord or any other platform and tell me what you want. I will try to get back to use as fast as possible and tell you how much the price would be and how much it would cost.
        </MudText>

        <MudText Typo="Typo.h5" Color="Color.Primary">
            Payment:
        </MudText>
        <MudText>
            Payment is done via PayPal and I will send you the charge. After I have received the payment I will then send you all the assets for you models and packages.
        </MudText>

        <MudText Typo="Typo.h5" Color="Color.Primary">
            Delivery:
        </MudText>
        <MudText Typo="Typo.body1">
            After the payment I will send you all the assets and packages and if you want I can also upload you avatar to you account.
        </MudText>

        <MudText Typo="Typo.h5" Color="Color.Primary">
            Revisions:
        </MudText>
        <MudText Typo="Typo.body1">
            If you find anything that you change or something that you don't like, just let me know and I try to update it asap. Though places don't ask for any changes after like a month of receiving the models.
        </MudText>
    </MudPaper>

    <MudOverlay @bind-Visible="_overlayVisible" DarkBackground="true" AutoClose="true">
        <MudPaper Style="height: 90vh;width: 70vh" Class="rounded-lg">
            <MudStack>
                <MudImage Elevation="23" Class="rounded-lg  ma-4" Src="@_overlayImageSrc" ObjectFit="ObjectFit.Contain" Fluid/>
                <MudText Class="text-center ma-4">
                    @GetText(_overlayImageSrc)
                </MudText>
            </MudStack>
        </MudPaper>
    </MudOverlay>

</MudContainer>


@code
{
    private string GetText(string image)
    {
        if (!_textDictionary.TryGetValue(image, out string text))
            return "No description available";
        return text;
    }

    private readonly Dictionary<string, string> _textDictionary = new Dictionary<string, string>()
    {
        { "img/gallery/1.png", "Custom texture commission of the kita'vali model" },
        { "img/gallery/2.png", "Custom texture commission" },
        { "img/gallery/3.jpg", "Custom texture on a slightly modified jerry'vali model" },
        { "img/gallery/4.png", "Custom texture" },
        { "img/gallery/5.png", "Custom modified rex with custom texture and using some assets from gumroad with a custom tail" },
        { "img/gallery/6.png", "kitbash rex with hyenid hair, nkg protogen ears and the ghostly chestfluff" },
        { "img/kitbash/robot-nanachi.png", "Modified zoichi model with some kitbash parts of other models" },
        { "img/kitbash/snek.png", "kitbash model I created for a friend" },
        { "img/kitbash/squid.png", "kitbash model of a rex with some tentacles" },
        { "img/kitbash/thingy.png", "slight kitbash to change the body proportions of the model" },
        { "img/custom/twitch.png", "simple twitch logo as a mesh" },
        { "img/custom/tail.png", "a tail I created for scottish_ripper" },
        { "img/kitbash/cloth.png", "simple cloth and gold based outfit I mode for myself" },
        { "img/kitbash/crystal.png", "crystal and gold based outfit I mode for myself" },
        { "img/kitbash/proto.png", "small kitbash project I have done to see if it would look nice" },
        { "img/custom/colar.png", "a collor I have created for a friend" },
    };


    private bool _overlayVisible = false;
    private static string _overlayImageSrc = string.Empty;

    private void OpenImageOverlay(string imageSrc)
    {
        if (string.IsNullOrEmpty(imageSrc)) return;

        _overlayImageSrc = imageSrc;
        _overlayVisible = true;
        StateHasChanged();
    }

    private bool _visible = false;

    public void OpenOverlay()
    {
        _visible = true;
        StateHasChanged();
    }

    private string SonaLink => DarkModeService.IsDarkMode ? "img/sona-dark.png" : "img/sona-light.png";

    private readonly List<string> _imageList1 = ["img/gallery/1.png", "img/gallery/2.png", "img/gallery/3.jpg", "img/gallery/4.png", "img/gallery/5.png", "img/gallery/6.png"];
    private readonly List<string> _imageList2 = ["img/kitbash/robot-nanachi.png", "img/kitbash/snek.png", "img/kitbash/squid.png", "img/kitbash/thingy.png", "img/kitbash/cloth.png", "img/kitbash/proto.png", "img/kitbash/proto.png",];
    private readonly List<string> _imageList3 = ["img/custom/twitch.png", "img/custom/tail.png", "img/custom/colar.png",];

    protected override void OnInitialized()
    {
        DarkModeService.OnDarkModeChange += StateHasChanged;
    }

    public void Dispose()
    {
        DarkModeService.OnDarkModeChange -= StateHasChanged;

        _dotNetHelper?.Dispose();
    }

    private DotNetObjectReference<Home>? _dotNetHelper;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _dotNetHelper = DotNetObjectReference.Create(this);
            await JSRuntime.InvokeVoidAsync("detectScroll", "paper1", _dotNetHelper);
            await JSRuntime.InvokeVoidAsync("detectScroll", "paper2", _dotNetHelper);
            await JSRuntime.InvokeVoidAsync("detectScroll", "paper3", _dotNetHelper);
            await JSRuntime.InvokeVoidAsync("detectScroll", "paper4", _dotNetHelper);
            await JSRuntime.InvokeVoidAsync("detectScroll", "paper5", _dotNetHelper);
        }
    }


}